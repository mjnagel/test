name: CI UDS Rook Ceph

on:
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  yaml-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install yamllint
        run: pip install yamllint
      - name: Lint YAML files
        run: yamllint . -c .yamllint --no-warnings
  test-package:
    runs-on: ubuntu-latest
    needs: yaml-lint
    if: needs.yaml-lint.result == 'success' || needs.yaml-lint.result == 'skipped'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-west-2
          role-duration-seconds: 21600

      - name: Login to Registry1
        uses: docker/login-action@v3
        with:
          registry: registry1.dso.mil
          username: ${{ secrets.REGISTRY1_USERNAME }}
          password: ${{ secrets.REGISTRY1_PASSWORD }}

      - name: Install Zarf
        uses: defenseunicorns/setup-zarf@main
        with:
          # renovate: datasource=github-tags depName=defenseunicorns/zarf versioning=semver
          version: v0.31.4
          download-init-package: true

      - name: Create Package
        # Skip SBOM since package is used for internal testing, not publishing
        run: make create-zarf-package extra_create_args="--skip-sbom"

      - name: Create Cluster
        env:
          SHA: ${{ github.sha }}
        run: make create-cluster short_sha="${SHA:0:7}"

      - name: Deploy Package
        run: make deploy-zarf-package

      - name: Test Package
        run: make test-zarf-package

      - name: Debug Output
        if: always()
        run: make debug-output

      - name: Remove Package
        if: always()
        run: make remove-zarf-package

      - name: Delete Cluster
        if: always()
        run: make delete-cluster
